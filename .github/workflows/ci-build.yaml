name: Build Game
on:
  push:
    branches:
    - master
    tags:
      - 'v*.*.*'
  pull_request:
    branches:
    - master
jobs:

  build_webapp:
    name: Build game webapp
    runs-on: ubuntu-20.04
    steps:
    - name: git checkout
      uses: actions/checkout@v2
      with:
        path: game
    - name: Setup Node.js
      uses: actions/setup-node@v1
      with:
        node-version: "14.x"
    - name: Cache node modules
      uses: actions/cache@v2
      env:
        cache-name: cache-node-modules
      with:
        path: ~/.npm
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-build-${{ env.cache-name }}-
          ${{ runner.os }}-build-
          ${{ runner.os }}-
    - name: Install dependencies of the game
      run: yarn install
      working-directory: ./game
    - name: Compile game
      run: yarn compile
      working-directory: ./game
    - name: dist game
      run: yarn dist
      working-directory: ./game
    - name: Archive dist folder
      uses: actions/upload-artifact@v1
      with:
        name: game-dist
        path: game/dist

  build_website:
    name: Build static website
    runs-on: ubuntu-20.04
    steps:
    - name: git checkout
      uses: actions/checkout@v2
      with: 
        repository: friendlyfiregame/staticgamesite
        path: staticWebsite
    - name: Setup Node.js
      uses: actions/setup-node@v1
      with:
        node-version: "12.x"
    - name: Cache node modules
      uses: actions/cache@v2
      env:
        cache-name: cache-node-modules
      with:
        path: ~/.npm
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-build-${{ env.cache-name }}-
          ${{ runner.os }}-build-
          ${{ runner.os }}-
    - name: Install dependecies of static website
      run: yarn install
      working-directory: ./staticWebsite
    - name: Build static website
      run: yarn build:dist
      working-directory: ./staticWebsite
    - name: Archive dist folder
      uses: actions/upload-artifact@v1
      with:
        name: static-website-dist
        path: staticWebsite/dist


  deploy_webapp:
    name: Deploy Webapp
    needs: build_webapp
    runs-on: ubuntu-20.04
    steps:
    - name: Download archived static website dist folder
      uses: actions/download-artifact@master
      with:
        name: static-website-dist
        path: dist
    - name: Download archived game dist folder
      uses: actions/download-artifact@master
      with:
        name: game-dist
        path: dist/game

    - name: Publish browser game and static website
      if: github.ref == 'refs/heads/master'
      uses: peaceiris/actions-gh-pages@v3
      with:
        deploy_key: ${{ secrets.ACTIONS_DEPLOY_KEY }}
        external_repository: friendlyfiregame/friendlyfiregame.github.io
        publish_branch: master
        publish_dir: ./dist
        force_orphan: true
        cname: friendlyfiregame.com

  build_electron_app:
    needs: build_webapp
    name: Build Electron Apps
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
        - ubuntu-20.04
        - macos-10.15
        - windows-2019
    steps:
    - name: git checkout
      uses: actions/checkout@v2
    - name: Setup Node.js
      uses: actions/setup-node@v1
      with:
        node-version: "14.x"
    - name: Cache node modules
      uses: actions/cache@v2
      env:
        cache-name: cache-node-modules
      with:
        path: ~/.npm
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-build-${{ env.cache-name }}-
          ${{ runner.os }}-build-
          ${{ runner.os }}-
    - run: yarn install
    - run: yarn compile
    - run: yarn package
